ARG PYTORCH_TAG=latest
FROM pytorch/pytorch:$PYTORCH_TAG

ARG CONDA_CUDA_VERSION
ARG CONDA_CUDNN_VERSION

LABEL maintainer="Ted Brookings <tbrookin@broadinstitute.org>"
ENV HOME=/root
ENV JAX_ENABLE_X64=true

# 1) if want to escape reliance on pytorch docker and base from ubuntu,
#    need to build torch from source. See:
#    https://github.com/pytorch/pytorch/blob/master/docker/pytorch/Dockerfile
# 2) If want to include tensorflow, either need to install cuda toolkit
#    in conda:
#      cudatoolkit=$CONDA_CUDA_VERSION cudnn=$CONDA_CUDNN_VERSION \
#    or build tensorflow from source:
#      https://www.tensorflow.org/install/source

# install cmake, google-cloud-sdk (gsutil), then conda and pip packages
# NOTE: ignore apt-utils warnings: we don't want interactive install anyway!
RUN apt-get update && DEBIAN_FRONTEND=noninteractive apt-get install --no-install-recommends -y \
        apt-transport-https ca-certificates gnupg-agent \
        software-properties-common curl wget nano cmake git \
    && echo "deb [signed-by=/usr/share/keyrings/cloud.google.gpg] https://packages.cloud.google.com/apt cloud-sdk main" \
        > /etc/apt/sources.list.d/google-cloud-sdk.list \
    && curl https://packages.cloud.google.com/apt/doc/apt-key.gpg \
        | apt-key --keyring /usr/share/keyrings/cloud.google.gpg add - \
    && apt-get update \
    && DEBIAN_FRONTEND=noninteractive apt-get install --no-install-recommends -y \
        google-cloud-sdk \
    && sed -i 's/^#force_color_prompt=yes$/force_color_prompt=yes/' ~/.bashrc \
    && git config --global core.editor "nano" \
    && apt-get autoremove && apt-get clean
   
# install 
RUN conda config --prepend channels conda-forge \
    && conda config --prepend channels pytorch \
    && conda install -n base -y python=$PYTHON_VERSION \
    && conda install -n base -y --freeze-installed \
        pytest pytest-cov memory_profiler line_profiler psutil \
        scipy scikit-learn pandas dask pytables dill h5py \
        sortedcontainers intervaltree hyperopt autograd \
        seaborn matplotlib jupyter \
    && conda install -n base -y --freeze-installed -c bioconda \
        pybedtools pytabix pysam \
    && conda run -n base pip install --no-cache-dir \
        igv-jupyter phate pyro-ppl fastai jax jaxlib xgboost \
    && jupyter serverextension enable --py igv --sys-prefix \
    && jupyter nbextension install --py igv --sys-prefix \
    && jupyter nbextension enable --py igv --sys-prefix \
    && conda clean -ya
